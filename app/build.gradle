/*
 * Copyright 2018 Kaidan Gustave
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'xyz.laxus.Main'

repositories {
    jitpack()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    // Kotlin
    compile kotlinModule('stdlib-jdk8')
    compile kotlinModule('stdlib-jdk7')
    compile kotlinModule('reflect')

    // Kotlin Coroutines
    compile kotlinxCoroutines('core')
    //compile kotlinxCoroutines('io')

    // Kotlin Json
    compile kotlinJson()

    // Ktor
    //compile ktorServer('core')
    //compile ktorServer('netty')
    //compile ktorServer('host-common')

    // JDA & Lavaplayer
    compile jda()
    compile jdaUtilities('oauth2')
    compile lavaplayer()

    // Database
    compile h2()

    // Configuration
    compile hocon()

    // Logging
    compile slf4j()
    compile logback()

    // Requests
    compile okHttp()
    compile youtube()
    compile jsoup()

    // Misc
    compile jagtag()

    // Projects
    //compile project(':api')
    compile project(':commons')
    compile project(':commons:jda')
    compile project(':database')
    compile project(':database:bot')
    compile project(':core')
}

shadowJar {
    baseName 'laxus'
    version ''
    classifier ''

    manifest {
        attributes 'Manifest-Version': "${ver.major}.${ver.minor}",
                   'Implementation-Version': "$ver",
                   'Main-Class': mainClassName
    }
}

build {
    dependsOn classes
    dependsOn shadowJar

    shadowJar.mustRunAfter classes
}
